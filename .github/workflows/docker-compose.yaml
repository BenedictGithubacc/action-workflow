name: docker-compose
on:
  workflow_dispatch:
jobs:
  deploy-frappe:
    runs-on: self-hosted
    name: Deploy Frappe with Docker Compose
    steps:
      #- name: Free up disk space
        #run: |
          #echo "Cleaning up Docker system and caches to free disk space..."
          #docker system prune --all --force --volumes || echo "No Docker to prune or no permission"
          # yarn cache clean || echo "Yarn cache clean failed"
          # npm cache clean --force || echo "NPM cache clean failed"
          # sudo rm -rf /home/runner/.cache/pip || echo "No pip cache or no permission"
          # sudo rm -rf /home/runner/.cache/yarn || echo "No yarn cache or no permission"
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: bizaXL/frappe_docker
          ref: Devtest1
      - name: Export and verify apps.json base64
        shell: bash
        run: |
             # Encode apps.json to Base64 without newlines
             APPS_JSON_BASE64=$(base64 -w 0 ./apps.json)
             # Export the variable for subsequent steps
             echo "APPS_JSON_BASE64=$APPS_JSON_BASE64" >> $GITHUB_ENV
             # Decode Base64 back to JSON file for verification
             echo -n "${APPS_JSON_BASE64}" | base64 -d > apps-test-output.json
             # Optionally, check the file content (for debug only)
             cat apps-test-output.json


      - name: Docker build
        working-directory: /home/ubuntu/actions-runner/_work/action-workflow/action-workflow
        run: |
          docker build \
            --no-cache \
            --build-arg=FRAPPE_PATH=https://github.com/frappe/frappe.git \
            --build-arg=FRAPPE_BRANCH=version-15 \
            --build-arg=PYTHON_VERSION=3.11.9 \
            --build-arg=NODE_VERSION=20.19.2 \
            --build-arg=APPS_JSON_BASE64=$APPS_JSON_BASE64 \
            --tag=benedictdockeracc/build-image:${{ github.run_number }} \
            --file=./images/custom/Containerfile .
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_password }}
      - name: Docker push
        run: docker push benedictdockeracc/build-image:${{ github.run_number }}
      - name: Checkout other repo
        run: |
             git clone --branch Devtest1 https://github.com/bizaXL/frappe_docker.git
      - name: Update pwd.yml file
        run: |
             sed -i -E \
             '/image:[[:space:]]*(redis:|mariadb:)/! {     # if not a redis:/mariadb: image
             s|^( *)(image:[[:space:]]*).*|\1image: benedictdockeracc/build-image:'"${{ github.run_number }}"'|
             }' Frape-Docker/pwd.yml

      - name: Commit and push changes to other repo
        run: |
             cd Frape-Docker
             git config user.name "bizaXL"
             git config user.email "github@bizaxl.com"
             git add pwd.yml
             git commit -m "Update image tag to build number ${{ github.run_number }}"
             git push origin Devtest2



             

     


        
